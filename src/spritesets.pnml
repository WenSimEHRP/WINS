// this file contains the spritesets used in the station grf
// including realsprites and recolour sprites
//* start of templates




//* start of miscellaneous spritesets
// here I have bufferstops, snow, random deco, and some other stuff
// for snow I'm going to use random recolouring and random sprites
// for simplicity, I'll put everything in one spriteset

// groups
#define GROUP_SNOW_0        0
#define GROUP_SNOW_1        (GROUP_SNOW_0 + 1)
#define GROUP_SNOW_2        (GROUP_SNOW_1 + 1)
#define GROUP_SNOW_3        (GROUP_SNOW_2 + 1)
#define GROUP_BUFFERSTOP    (GROUP_SNOW_3 + 1)
#define GROUP_DECO_0        (GROUP_BUFFERSTOP + 1)
#define GROUP_DECO_1        (GROUP_DECO_0 + 1)
#define GROUP_DECO_2        (GROUP_DECO_1 + 1)
#define GROUP_DECO_3        (GROUP_DECO_2 + 1)
#define GROUP_RECOLOUR_SNOW (GROUP_DECO_3 + 1)
#define GROUP_RECOLOUR_DECO (GROUP_RECOLOUR_SNOW + 1)
// functions
#define SPRITE_PER_MISC_GRUOP 4
#define GET_SPRITE_MISC(group, sprite) (group * SPRITE_PER_MISC_GRUOP + sprite)

spriteset(s_misc) {
    /* snow */ //*0
    snow_0_NW: t_0(0, name)
    snow_0_NE: t_0(1, name)
    snow_0_SE: t_0(2, name)
    snow_0_SW: t_0(3, name)
    /* snow */ //*1
    snow_1_NW: t_0(0, name)
    snow_1_NE: t_0(1, name)
    snow_1_SE: t_0(2, name)
    snow_1_SW: t_0(3, name)
    /* snow */ //*2
    snow_2_NW: t_0(0, name)
    snow_2_NE: t_0(1, name)
    snow_2_SE: t_0(2, name)
    snow_2_SW: t_0(3, name)
    /* snow */ //*3
    snow_3_NW: t_0(0, name)
    snow_3_NE: t_0(1, name)
    snow_3_SE: t_0(2, name)
    snow_3_SW: t_0(3, name)
    /* bufferstops */ //*4
    bufferstop_NW: t_bufferstop_0(name)
    bufferstop_NE: t_bufferstop_1(name)
    bufferstop_SE: t_bufferstop_2(name)
    bufferstop_SW: t_bufferstop_3(name)
    /* random deco */ //*5
    deco_0_NW: t_0(0, name)
    deco_0_NE: t_0(1, name)
    deco_0_SE: t_0(2, name)
    deco_0_SW: t_0(3, name)
    /* random deco */ //*6
    deco_1_NW: t_0(0, name)
    deco_1_NE: t_0(1, name)
    deco_1_SE: t_0(2, name)
    deco_1_SW: t_0(3, name)
    /* random deco */ //*7
    deco_2_NW: t_0(0, name)
    deco_2_NE: t_0(1, name)
    deco_2_SE: t_0(2, name)
    deco_2_SW: t_0(3, name)
    /* random deco */ //*8
    deco_3_NW: t_0(0, name)
    deco_3_NE: t_0(1, name)
    deco_3_SE: t_0(2, name)
    deco_3_SW: t_0(3, name)
    /* recolouring for snow */ //*9
    re_snow_1: recolour_sprite{}
    re_snow_2: recolour_sprite{}
    re_snow_3: recolour_sprite{}
    re_snow_4: recolour_sprite{}
    /* recolouring for deco */ //*10
    re_deco_1: recolour_sprite{}
    re_deco_2: recolour_sprite{}
    re_deco_3: recolour_sprite{}
    re_deco_4: recolour_sprite{}
}

//* start of shelter spritesets

#define SPRITESET_SHELTER(name) \
spriteset(s_shelter_##name) {\
    NW: t_0(0, name) \
    NE: t_0(1, name) \
    SE: t_0(2, name) \
    SW: t_0(3, name) \
}

//* start of platform spritesets

// groups
#define GROUP_SYM               0
#define GROUP_ASYM_1            (GROUP_SYM + 1)
#define GROUP_ASYM_2            (GROUP_ASYM_1 + 1)
#define GROUP_RECOLOUR_ERA      (GROUP_ASYM_2 + 1)
#define GROUP_RECOLOUR_PLATFORM (GROUP_RECOLOUR_ERA + 1)
// defines
#define NW 0
#define NE 1
#define SE 2
#define SW 3
// functions
#define SPRITE_PER_PLATFORM_GROUP 4
#define GET_SPRITE(group, sprite) (group * SPRITE_PER_PLATFORM_GROUP + sprite)
/*
There goes with two pointers: group pointer and sprite pointer
the group pointer points out the platform group, say, is it sym or
asym1 or asym2. The sprite pointer points out the sprite in the group,
say, is it NW or NE or SE or SW.

Here we use multiplication to tell the group and sprite apart.
Recoloursprites are special and should be handled separately.
*/

spriteset(s_platform_cement) {
    /* sym platforms */
    NW: t_platform_NW(name)
    NE: t_platform_NE(name)
    SE: t_platform_SE(name)
    SW: t_platform_SW(name)
    /* asym platforms 1 */
    NW_1: t_platform_NW_1(name)
    NE_1: t_platform_NE_1(name)
    SE_1: t_platform_SE_1(name)
    SW_1: t_platform_SW_1(name)
    /* asym platforms 2 */
    NW_2: t_platform_NW_2(name)
    NE_2: t_platform_NE_2(name)
    SE_2: t_platform_SE_2(name)
    SW_2: t_platform_SW_2(name)
    /* recolouring, recolour from RNG? */
    re_era_1: recolour_sprite{}
    re_era_2: recolour_sprite{}
    re_era_3: recolour_sprite{}
    re_era_4: recolour_sprite{} // placeholder
    /* recolouring for platform */
    re_platform_1: recolour_sprite{}
    re_platform_2: recolour_sprite{}
    re_platform_3: recolour_sprite{}
    re_platform_4: recolour_sprite{}
}
