# rail underlay
rail:
  ground:
    x: >
      ground { sprite: GROUNDSPRITE_RAIL_X; }
    y: >
      ground { sprite: GROUNDSPRITE_RAIL_Y; }

# fence grass underlay
underlay:
  left:
    x: >
      childsprite {
        sprite: CUSTOM(0, EXTRACT_INFO(t_underlay, pos_underlay_type) * id_underlay_size + pos_underlay_start + 0);
        hide_sprite: EXTRACT_INFO(t_underlay, pos_underlay_type) == none_code || hasbit(LOAD_TEMP(t_underlay), pos_left);
        always_draw: 1;
      }
    y: >
      childsprite {
        sprite: CUSTOM(0, EXTRACT_INFO(t_underlay, pos_underlay_type) * id_underlay_size + pos_underlay_start + 1);
        hide_sprite: EXTRACT_INFO(t_underlay, pos_underlay_type) == none_code || hasbit(LOAD_TEMP(t_underlay), pos_left);
        always_draw: 1;
      }
  right:
    x: >
      childsprite {
        sprite: CUSTOM(0, EXTRACT_INFO(t_underlay, pos_underlay_type) * id_underlay_size + pos_underlay_start + 2);
        hide_sprite: EXTRACT_INFO(t_underlay, pos_underlay_type) == none_code || hasbit(LOAD_TEMP(t_underlay), pos_right);
        always_draw: 1;
      }
    y: >
      childsprite {
        sprite: CUSTOM(0, EXTRACT_INFO(t_underlay, pos_underlay_type) * id_underlay_size + pos_underlay_start + 3);
        hide_sprite: EXTRACT_INFO(t_underlay, pos_underlay_type) == none_code || hasbit(LOAD_TEMP(t_underlay), pos_right);
        always_draw: 1;
      }
  front:
    x: >
      childsprite {
        sprite: CUSTOM(0, EXTRACT_INFO(t_underlay, pos_underlay_type) * id_underlay_size + pos_underlay_start + 1);
        hide_sprite: EXTRACT_INFO(t_underlay, pos_underlay_type) == none_code || hasbit(LOAD_TEMP(t_underlay), pos_front);
        always_draw: 1;
      }
    y: >
      childsprite {
        sprite: CUSTOM(0, EXTRACT_INFO(t_underlay, pos_underlay_type) * id_underlay_size + pos_underlay_start + 0);
        hide_sprite: EXTRACT_INFO(t_underlay, pos_underlay_type) == none_code || hasbit(LOAD_TEMP(t_underlay), pos_front);
        always_draw: 1;
      }
  back:
    x: >
      childsprite {
        sprite: CUSTOM(0, EXTRACT_INFO(t_underlay, pos_underlay_type) * id_underlay_size + pos_underlay_start + 3);
        hide_sprite: EXTRACT_INFO(t_underlay, pos_underlay_type) == none_code || hasbit(LOAD_TEMP(t_underlay), pos_back);
        always_draw: 1;
      }
    y: >
      childsprite {
        sprite: CUSTOM(0, EXTRACT_INFO(t_underlay, pos_underlay_type) * id_underlay_size + pos_underlay_start + 2);
        hide_sprite: EXTRACT_INFO(t_underlay, pos_underlay_type) == none_code || hasbit(LOAD_TEMP(t_underlay), pos_back);
        always_draw: 1;
      }
  yard_left_front:
    x: >
      childsprite {
        sprite: CUSTOM(0, EXTRACT_INFO(t_underlay, pos_underlay_type) * id_underlay_size + pos_underlay_start + 1);
        xoffset: FORCE_SHOW(-6);
        yoffset: FORCE_SHOW(-3);
        always_draw: 1;
        hide_sprite:
          EXTRACT_INFO(t_underlay, pos_underlay_type) == none_code |
          hasbit(LOAD_TEMP(t_underlay), pos_front);

      }
    y: >
      childsprite {
        sprite: CUSTOM(0, EXTRACT_INFO(t_underlay, pos_underlay_type) * id_underlay_size + pos_underlay_start + 0);
        xoffset: 6;
        yoffset: FORCE_SHOW(-3);
        always_draw: 1;
        hide_sprite:
          EXTRACT_INFO(t_underlay, pos_underlay_type) == none_code ||
          hasbit(LOAD_TEMP(t_underlay), pos_front);
      }
  yard_left_back:
    x: >
      childsprite {
        sprite: CUSTOM(0, EXTRACT_INFO(t_underlay, pos_underlay_type) * id_underlay_size + pos_underlay_start + 3);
        xoffset: FORCE_SHOW(-6);
        yoffset: FORCE_SHOW(-3);
        always_draw: 1;
        hide_sprite:
          EXTRACT_INFO(t_underlay, pos_underlay_type) == none_code ||
          hasbit(LOAD_TEMP(t_underlay), pos_back);
      }
    y: >
      childsprite {
        sprite: CUSTOM(0, EXTRACT_INFO(t_underlay, pos_underlay_type) * id_underlay_size + pos_underlay_start + 2);
        xoffset: 6;
        yoffset: FORCE_SHOW(-3);
        always_draw: 1;
        hide_sprite:
          EXTRACT_INFO(t_underlay, pos_underlay_type) == none_code ||
          hasbit(LOAD_TEMP(t_underlay), pos_back);
      }

# fence
fence:
  left:
    x: >
      building {
        sprite: CUSTOM(0, EXTRACT_INFO(t_fence, pos_fence_type) * id_fence_size);
        xextent: 16;
        yextent: 0;
        zextent: 4;
        hide_sprite: EXTRACT_INFO(t_fence, pos_fence_type) == none_code || hasbit(LOAD_TEMP(t_fence), pos_left);
      }
    y: >
      building {
        sprite: CUSTOM(0, EXTRACT_INFO(t_fence, pos_fence_type) * id_fence_size + 1);
        xextent: 0;
        yextent: 16;
        zextent: 4;
        hide_sprite: EXTRACT_INFO(t_fence, pos_fence_type) == none_code || hasbit(LOAD_TEMP(t_fence), pos_left);
      }
  right:
    x: >
      building {
        sprite: CUSTOM(0, EXTRACT_INFO(t_fence, pos_fence_type) * id_fence_size);
        xextent: 16;
        yoffset: 16;
        yextent: 0;
        zextent: 4;
        hide_sprite: EXTRACT_INFO(t_fence, pos_fence_type) == none_code || hasbit(LOAD_TEMP(t_fence), pos_right);
      }
    y: >
      building {
        sprite: CUSTOM(0, EXTRACT_INFO(t_fence, pos_fence_type) * id_fence_size + 1);
        xextent: 0;
        xoffset: 16;
        yextent: 16;
        zextent: 4;
        hide_sprite: EXTRACT_INFO(t_fence, pos_fence_type) == none_code || hasbit(LOAD_TEMP(t_fence), pos_right);
      }
  front:
    x: >
      building {
        sprite: CUSTOM(0, EXTRACT_INFO(t_fence, pos_fence_type) * id_fence_size + 1);
        xextent: 0;
        yextent: 16;
        zextent: 4;
        hide_sprite: EXTRACT_INFO(t_fence, pos_fence_type) == none_code || hasbit(LOAD_TEMP(t_fence), pos_front);
      }
    y: >
      building {
        sprite: CUSTOM(0, EXTRACT_INFO(t_fence, pos_fence_type) * id_fence_size);
        xextent: 16;
        yextent: 0;
        zextent: 4;
        hide_sprite: EXTRACT_INFO(t_fence, pos_fence_type) == none_code || hasbit(LOAD_TEMP(t_fence), pos_front);
      }
  back:
    x: >
      building {
        sprite: CUSTOM(0, EXTRACT_INFO(t_fence, pos_fence_type) * id_fence_size + 1);
        xextent: 0;
        xoffset: 16;
        yextent: 16;
        zextent: 4;
        hide_sprite: EXTRACT_INFO(t_fence, pos_fence_type) == FILLED(8) || hasbit(LOAD_TEMP(t_fence), pos_back);
      }
    y: >
      building {
        sprite: CUSTOM(0, EXTRACT_INFO(t_fence, pos_fence_type) * id_fence_size);
        xextent: 16;
        yoffset: 16;
        yextent: 0;
        zextent: 4;
        hide_sprite: EXTRACT_INFO(t_fence, pos_fence_type) == none_code || hasbit(LOAD_TEMP(t_fence), pos_back);
      }

# barrier
barrier:
  front:
    x: >
      building {
        sprite: CUSTOM(0, pos_barrier_start + 1);
        xextent: 6;
        yextent: 4;
        zextent: 6;
        yoffset: 6;
        hide_sprite: hasbit(LOAD_TEMP(t_barrier), pos_front);
      }
    y: >
      building {
        sprite: CUSTOM(0, pos_barrier_start + 0);
        xextent: 4;
        yextent: 6;
        zextent: 6;
        xoffset: 6;
        hide_sprite: hasbit(LOAD_TEMP(t_barrier), pos_front);
      }
  back:
    x: >
      building {
        sprite: CUSTOM(0, pos_barrier_start + 3);
        xextent: 6;
        yextent: 4;
        xoffset: 10;
        zextent: 6;
        yoffset: 6;
        hide_sprite: hasbit(LOAD_TEMP(t_barrier), pos_back);
      }
    y: >
      building {
        sprite: CUSTOM(0, pos_barrier_start + 2);
        xextent: 4;
        yextent: 6;
        yoffset: 10;
        zextent: 6;
        xoffset: 6;
        hide_sprite: hasbit(LOAD_TEMP(t_barrier), pos_back);
      }
  yard_left_front:
    x: >
      building {
        sprite: CUSTOM(0, pos_barrier_start + 1);
        xextent: 6;
        yextent: 4;
        zextent: 6;
        yoffset: FORCE_SHOW(-2);
        hide_sprite:
          EXTRACT_INFO(t_yard, pos_yard_connection_info_left) == none_yard ||
          hasbit(LOAD_TEMP(t_barrier), pos_front);
      }
    y: >
      building {
        sprite: CUSTOM(0, pos_barrier_start + 0);
        xextent: 4;
        yextent: 6;
        zextent: 6;
        xoffset: FORCE_SHOW(-2);
        hide_sprite:
          EXTRACT_INFO(t_yard, pos_yard_connection_info_left) == none_yard ||
          hasbit(LOAD_TEMP(t_barrier), pos_front);
      }
  yard_left_back:
    x: >
      building {
        sprite: CUSTOM(0, pos_barrier_start + 3);
        xextent: 6;
        yextent: 4;
        xoffset: 10;
        zextent: 6;
        yoffset: FORCE_SHOW(-2);
        hide_sprite:
          EXTRACT_INFO(t_yard, pos_yard_connection_info_left) == none_yard ||
          hasbit(LOAD_TEMP(t_barrier), pos_back);
      }
    y: >
      building {
        sprite: CUSTOM(0, pos_barrier_start + 2);
        xextent: 4;
        yextent: 6;
        yoffset: 10;
        zextent: 6;
        xoffset: FORCE_SHOW(-2);
        hide_sprite:
          EXTRACT_INFO(t_yard, pos_yard_connection_info_left) == none_yard ||
          hasbit(LOAD_TEMP(t_barrier), pos_back);
      }

# marshalling yard
yard:
  left:
    x: >
      childsprite {
        sprite: CUSTOM(0, pos_yard_start +
          EXTRACT_INFO(t_yard, pos_yard_connection_type) * id_yard_size +
          EXTRACT_INFO(t_yard, pos_yard_connection_info_left));
        yoffset: FORCE_SHOW(-4);
        xoffset: FORCE_SHOW(-8);
        always_draw: 1;
        hide_sprite:
          EXTRACT_INFO(t_yard, pos_yard_connection_info_left) == none_yard ||
          EXTRACT_INFO(t_yard, pos_yard_connection_type) == none_code;
      }
    y: >
      childsprite {
        sprite: CUSTOM(0, pos_yard_start +
          EXTRACT_INFO(t_yard, pos_yard_connection_type) * id_yard_size +
          EXTRACT_INFO(t_yard, pos_yard_connection_info_left) + (id_yard_size / 2));
        yoffset: 4;
        xoffset: 8;
        always_draw: 1;
        hide_sprite:
          EXTRACT_INFO(t_yard, pos_yard_connection_info_left) == none_yard ||
          EXTRACT_INFO(t_yard, pos_yard_connection_type) == none_code;
      }

catenary:
  yard:
    x: >
      building {
        sprite: CUSTOM(0, pos_catenary_start +
                        EXTRACT_INFO(t_catenary, pos_catenary_info_side) +
                        EXTRACT_INFO(t_catenary, pos_catenary_type) * id_catenary_size);
        xextent: 15;
        xoffset: 1;
        yoffset: 0;
        yextent: 1;
        zextent: 1;
        zoffset: 12;
        hide_sprite: EXTRACT_INFO(t_catenary, pos_catenary_type) == none_catenary || EXTRACT_INFO(t_yard, pos_yard_connection_info_left) == none_yard;
      }
    y: >
      building {
        sprite: CUSTOM(0, pos_catenary_start + (id_catenary_size / 2) +
                        EXTRACT_INFO(t_catenary, pos_catenary_info_side) +
                        EXTRACT_INFO(t_catenary, pos_catenary_type) * id_catenary_size);
        yextent: 15;
        yoffset: 1;
        xoffset: 0;
        xextent: 1;
        zextent: 1;
        zoffset: 12;
        hide_sprite: EXTRACT_INFO(t_catenary, pos_catenary_type) == none_catenary || EXTRACT_INFO(t_yard, pos_yard_connection_info_left) == none_yard;
      }
  default:
    x: >
      building {
        sprite: CUSTOM(0, pos_catenary_start +
                        EXTRACT_INFO(t_catenary, pos_catenary_info_normal) +
                        EXTRACT_INFO(t_catenary, pos_catenary_type) * id_catenary_size);
        xextent: 15;
        xoffset: 1;
        yoffset: 8;
        yextent: 1;
        zextent: 1;
        zoffset: 12;
        hide_sprite: EXTRACT_INFO(t_catenary, pos_catenary_type) == none_catenary;
      }
      building {
        sprite: CUSTOM(0, pos_pylon_start +
                          EXTRACT_INFO(t_pylon, pos_pylon_info_even) +
                          EXTRACT_INFO(t_pylon, pos_pylon_type) * id_pylon_size);
        xextent: 1;
        yextent: 16;
        zextent: 16;
        hide_sprite: EXTRACT_INFO(t_pylon, pos_pylon_info_even) == none_pylon;
      }
      building {
        sprite: CUSTOM(0, pos_pylon_start +
                          EXTRACT_INFO(t_pylon, pos_pylon_info_odd) +
                          EXTRACT_INFO(t_pylon, pos_pylon_type) * id_pylon_size);
        xextent: 1;
        xoffset: 16;
        yextent: 16;
        zextent: 16;
        hide_sprite: EXTRACT_INFO(t_pylon, pos_pylon_info_odd) == none_pylon;
      }
    y: >
      building {
        sprite: CUSTOM(0, pos_catenary_start + (id_catenary_size / 2) +
                        EXTRACT_INFO(t_catenary, pos_catenary_info_normal) +
                        EXTRACT_INFO(t_catenary, pos_catenary_type) * id_catenary_size);
        yextent: 15;
        yoffset: 1;
        xoffset: 8;
        xextent: 1;
        zextent: 1;
        zoffset: 12;
        hide_sprite: EXTRACT_INFO(t_catenary, pos_catenary_type) == none_catenary;
      }
      building {
        sprite: CUSTOM(0, pos_pylon_start +
                          EXTRACT_INFO(t_pylon, pos_pylon_info_even) +
                          EXTRACT_INFO(t_pylon, pos_pylon_type) * id_pylon_size + 4);
        yextent: 1;
        xextent: 16;
        zextent: 16;
        hide_sprite: EXTRACT_INFO(t_pylon, pos_pylon_info_even) == none_pylon;
      }
      building {
        sprite: CUSTOM(0, pos_pylon_start +
                          EXTRACT_INFO(t_pylon, pos_pylon_info_odd) +
                          EXTRACT_INFO(t_pylon, pos_pylon_type) * id_pylon_size + 4);
        yextent: 1;
        yoffset: 16;
        xextent: 16;
        zextent: 16;
        hide_sprite: EXTRACT_INFO(t_pylon, pos_pylon_info_odd) == none_pylon;
      }

end_of_catenary:
  default:
    x: >
      building {
        sprite: CUSTOM(0, LOAD_TEMP(t_style) * id_end_of_catenary_size + pos_end_of_catenary_start);
        xextent: 20;
        xoffset: FORCE_SHOW(-4);
        yextent: 6;
        yoffset: 10;
        zextent: 6;
      }
    y: >
      building {
        sprite: CUSTOM(0, LOAD_TEMP(t_style) * id_end_of_catenary_size + pos_end_of_catenary_start + 1);
        yextent: 20;
        yoffset: FORCE_SHOW(-4);
        xextent: 6;
        xoffset: 10;
        zextent: 6;
      }
  diff_side:
    x: >
      building {
        sprite: CUSTOM(0, LOAD_TEMP(t_style) * id_end_of_catenary_size + pos_end_of_catenary_start);
        xextent: 20;
        xoffset: FORCE_SHOW(-4);
        yextent: 6;
        zextent: 6;
      }
    y: >
      building {
        sprite: CUSTOM(0, LOAD_TEMP(t_style) * id_end_of_catenary_size + pos_end_of_catenary_start + 1);
        yextent: 20;
        yoffset: FORCE_SHOW(-4);
        xextent: 6;
        zextent: 6;
      }
  opposite_same_side:
    x: >
      building {
        sprite: CUSTOM(0, LOAD_TEMP(t_style) * id_end_of_catenary_size + pos_end_of_catenary_start);
        xextent: 20;
        xoffset: 0;
        yextent: 6;
        yoffset: 10;
        zextent: 6;
      }
    y: >
      building {
        sprite: CUSTOM(0, LOAD_TEMP(t_style) * id_end_of_catenary_size + pos_end_of_catenary_start + 1);
        yextent: 20;
        yoffset: 0;
        xextent: 6;
        xoffset: 10;
        zextent: 6;
      }
  opposite_diff_side:
    x: >
      building {
        sprite: CUSTOM(0, LOAD_TEMP(t_style) * id_end_of_catenary_size + pos_end_of_catenary_start);
        xextent: 20;
        xoffset: 0;
        yextent: 6;
        zextent: 6;
      }
    y: >
      building {
        sprite: CUSTOM(0, LOAD_TEMP(t_style) * id_end_of_catenary_size + pos_end_of_catenary_start + 1);
        yextent: 20;
        yoffset: 0;
        xextent: 6;
        zextent: 6;
      }
