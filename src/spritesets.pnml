// fence types
const id_fence_size = 2;
const id_fence_hedge = 0;
const id_fence_wooden = 1;
const id_fence_wooden_white = 2;
const id_fence_mesh = 3;
const id_fence_mesh_low = 4;
const id_fence_concrete = 5;
const id_fence_concrete_2 = 6;
const pos_fence_end = (id_fence_concrete_2 + 1) * id_fence_size;

// underlay types
const id_underlay_size = 4;
const pos_underlay_start = pos_fence_end;
const id_underlay_ogfx2_temperate = 0;
const id_underlay_ogfx2_arctic = 1;
const id_underlay_ogfx2_tropical = 2;
const id_underlay_ogfx2_desert = 3;
const id_underlay_ogfx_temperate = 4;
const id_underlay_ogfx_arctic = 5;
const id_underlay_ogfx_tropical = 6;
const id_underlay_ogfx_desert = 7;
const pos_underlay_end = pos_underlay_start + (id_underlay_ogfx_desert + 1) * id_underlay_size;

// barrier types
const pos_barrier_start = pos_underlay_end;
const pos_barrier_end = pos_barrier_start + 4;

// yard types
const id_yard_size = 3 * 2;
const pos_yard_start = pos_barrier_end;
const id_dualgauge_wood_underlay = 0;
const id_dualgauge_slab_underlay = 1;
const id_linear_conc_underlay =    2;
const id_linear_slab_underlay =    3;
const id_maglev_slab_underlay =    4;
const id_metro_wood_underlay =     5;
const id_metro_slab_underlay =     6;
const id_narrow_wood_underlay =    7;
const id_narrow_conc_underlay =    8;
const id_narrow_slab_underlay =    9;
const id_shin_conc_underlay =      10;
const id_shin_slab_underlay =      11;
const id_standard_wood_underlay =  12;
const id_standard_conc_underlay =  13;
const id_standard_slab_underlay =  14;
const id_standard_ind_underlay =   15;
const id_standard_snow_underlay =  16;
const id_narrow_ind_underlay =     17;
const id_narrow_snow_underlay =    18;
const pos_yard_end = pos_yard_start + (id_narrow_snow_underlay + 1) * id_yard_size;

// pylon
const id_pylon_size = 4 * 2;
const pos_pylon_start = pos_yard_end;
const id_pylon_old = 0;
const id_pylon_new = 1;
const pos_pylon_end = pos_pylon_start + (id_pylon_new + 1) * id_pylon_size;

// catenary
const id_catenary_size = 5 * 2;
const pos_catenary_start = pos_pylon_end;
const id_catenary_black = 0;
const id_catenary_ottd = 1;
const id_catenary_black_old = 3;
const id_catenary_ottd_old = 4;
const pos_catenary_end = pos_catenary_start + (id_catenary_ottd_old + 1) * id_catenary_size;

template tmpl_fence (x, y, path) {
    [ x,      y,      32,      25,     -31,     -10, path]
    [ x+40,   y,      32,      25,       1,     -10, path]
}

template tmpl_fence_v2 (x, y, path) {
    [ x,      y,      48,      30,     -39,     -12, path]
    [ x+50,   y,      48,      30,      -8,     -12, path]
}

template tmpl_underlay (x, y, path) {
    [ x,      y,      48,      30,     -39,     -12, path]
    [ x+50,   y,      48,      30,      -8,     -12, path]
    [ x,      y+40,   48,      30,      -7,       4, path]
    [ x+50,   y+40,   48,      30,     -40,       4, path]
}

template tmpl_barrier(path){
    [0*16, 0, 16, 16, -7, -6, path]
    [1*16, 0, 16, 16, -7, -6, path]
    [2*16, 0, 16, 16, -3, -4, path]
    [3*16, 0, 16, 16,-11, -4, path]
}

template tmpl_yard(path){
    [ 0 * 128 + 0 * 10, 0, 128, 64, -39, -4, path] // 0: front split, back split
    [ 2 * 128 + 2 * 10, 0, 128, 64, -55,  4, path] // 1: front merge, back split
    [ 1 * 128 + 1 * 10, 0, 128, 64, -23, -12, path] // 2: front split, back merge
    [ 0 * 128 + 0 * 10, 74, 128, 64, -87, -12, path]
    [ 2 * 128 + 2 * 10, 74, 128, 64, -71, -4, path]
    [ 1 * 128 + 1 * 10, 74, 128, 64, -103,  -20, path]
}

// TODO wait for yozora's graphics
template tmpl_catenary_pylons(y, path) {
    // x
    [17, y, 34, 58,  0 - 8, -29 - 8, path] // middle
    [0,  y, 34, 58, -1 - 8, -29, path] // start
    [34, y, 34, 58,  1 - 8, -29 - 16, path] // end
    [0,  y, 34 - 8, 58, -1 - 8, -29, path] // start 2
    // y
    [80 + 17, y, 34, 58, -27 - 3, -34, path] // middle
    [80 + 34, y, 34, 58, -26 - 3, -26, path] // end
    [80 + 0,  y, 34, 58, -28 - 3, -42, path] // start
    [] // start 2
}

template tmpl_catenary_wire(x, y, path) {
    // x
    [704, y,    32, 20, -29, -6, path]
    [352, y,    32, 19, -29, -5, path]
    [0,   y,    32, 20, -29, -6, path]
    [96,  y,    32,  5, -29, 10, path]
    [144, y,    1,  20,   2, -6, path]
    // y
    [0,   y+50, 32, 20,  -1, -6, path]
    [400, y,    32, 19,  -1, -5, path]
    [48,  y,    32, 20,  -1, -6, path]
    [96,  y,    32,  5,   0, 10, path]
    [144, y,    1,  20,  -1, -6, path]
}


// TODO: check the symlinks in the gfx folder
spriteset (s_fences_and_underlay, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP,) {
    // fences
    tmpl_fence_v2(0, 80, "gfx/fences/fences_2_no_grass.png")
    tmpl_fence_v2(0, 160, "gfx/fences/fences_2_no_grass.png")
    tmpl_fence_v2(0, 240, "gfx/fences/fences_2_no_grass.png")
    tmpl_fence_v2(0, 320, "gfx/fences/fences_2_no_grass.png")
    tmpl_fence_v2(0, 400, "gfx/fences/fences_2_no_grass.png")
    tmpl_fence(0, 50, "gfx/fences/fences_symmetric.png")
    tmpl_fence(0, 100, "gfx/fences/fences_symmetric.png")
    // underlay
    tmpl_underlay(0, 0, "gfx/fences/fences_2_grass_temp.png")
    tmpl_underlay(0, 0, "gfx/fences/fences_2_grass_arctic.png")
    tmpl_underlay(0, 0, "gfx/fences/fences_2_grass_trop.png")
    tmpl_underlay(0, 0, "gfx/fences/fences_2_grass_desert.png")
    tmpl_underlay(0, 0, "gfx/fences/fences_2_grass_temp.png")
    tmpl_underlay(0, 0, "gfx/fences/fences_2_grass_arctic.png")
    tmpl_underlay(0, 0, "gfx/fences/fences_2_grass_trop.png")
    tmpl_underlay(0, 0, "gfx/fences/fences_2_grass_desert.png")
    // barrier
    tmpl_barrier("gfx/barrier.png")
    // yard
    tmpl_yard("gfx/yard/dualgauge_wood_underlay.png")
    tmpl_yard("gfx/yard/dualgauge_slab_underlay.png")
    tmpl_yard("gfx/yard/linear_conc_underlay.png")
    tmpl_yard("gfx/yard/linear_slab_underlay.png")
    tmpl_yard("gfx/yard/maglev_slab_underlay.png")
    tmpl_yard("gfx/yard/metro_wood_underlay.png")
    tmpl_yard("gfx/yard/metro_slab_underlay.png")
    tmpl_yard("gfx/yard/narrow_wood_underlay.png")
    tmpl_yard("gfx/yard/narrow_conc_underlay.png")
    tmpl_yard("gfx/yard/narrow_slab_underlay.png")
    tmpl_yard("gfx/yard/shin_conc_underlay.png")
    tmpl_yard("gfx/yard/shin_slab_underlay.png")
    tmpl_yard("gfx/yard/standard_wood_underlay.png")
    tmpl_yard("gfx/yard/standard_conc_underlay.png")
    tmpl_yard("gfx/yard/standard_slab_underlay.png")
    tmpl_yard("gfx/yard/standard_ind_underlay.png")
    tmpl_yard("gfx/yard/standard_snow_underlay.png")
    tmpl_yard("gfx/yard/narrow_ind_underlay.png")
    tmpl_yard("gfx/yard/narrow_snow_underlay.png")
    // pylons
    tmpl_catenary_pylons(0, "gfx/poles.png")
    tmpl_catenary_pylons(64, "gfx/poles.png")
    // wires
    tmpl_catenary_wire(0, 0, "gfx/wire.png")
    tmpl_catenary_wire(0, 100, "gfx/wire.png")
    tmpl_catenary_wire(0, 0, "gfx/wire_old.png")
    tmpl_catenary_wire(0, 100, "gfx/wire_old.png")
}
