// tile defines

// on x directions
#define TILE_X_NE   0
#define TILE_X_SW   1
#define TILE_X_NW   2
#define TILE_X_SE   3
#define TILE_X_N    4
#define TILE_X_S    5
#define TILE_X_W    6
#define TILE_X_E    7
#define TILE_SELF   8

// on y directions
#define TILE_Y_NW   TILE_X_NE
#define TILE_Y_SE   TILE_X_SW
#define TILE_Y_NE   TILE_X_NW
#define TILE_Y_SW   TILE_X_SE
#define TILE_Y_N    TILE_X_N
#define TILE_Y_S    TILE_X_S
#define TILE_Y_W    TILE_X_E
#define TILE_Y_E    TILE_X_W

// temporary variables
#define TEMP_RAIL_CONTINUATION          9
#define TEMP_NEARBY_TILE_STATION        10
#define TEMP_NEARBY_TILE_PERPENDICULAR  11
#define TEMP_NEARBY_TILE_GRF            12
#define TEMP_CURRENT_LANDSCAPE          13
//#define TEMP_CURRENT_DATE               14
//#define TEMP_TERRAIN_TYPE               15
//#define TEMP_RANDBIT_TILE               16
//#define TEMP_RANDBIT_STATION            17

// spritesets
#define S_PLATFORM  0
#define S_MISC      1
#define S_SHELTER   2

// functions
#define SP_HIDE_SPRITE_BUFFERSTOP(tile) \
    (getbits(LOAD_TEMP(TEMP_RAIL_CONTINUATION), tile, 1))

#define SP_RANDOM_CHOOSE_SNOW \
    (random_bits_tile % 4)

#define SP_HIDE_SPRITE_CHECK_SNOW \
    !!(terrain_type != TILETYPE_SNOW)

// get platform formation
#define SP_GET_PLAT_FORMATION_N \
    ((!getbits(LOAD_TEMP(TEMP_NEARBY_TILE_STATION), TILE_X_SW, 1)                       |\
      !getbits(getbits(LOAD_TEMP(TILE_X_SW),BIT_PLATFORM_TYPE, 4) % PLATFORM_FORMATION_COUNT + 1,BIT_NPLAT, 1) &\
       getbits(LOAD_TEMP(TEMP_NEARBY_TILE_GRF),     TILE_X_SW, 1)) << 1                 |\
     (!getbits(LOAD_TEMP(TEMP_NEARBY_TILE_STATION), TILE_X_NE, 1)                       |\
      !getbits(getbits(LOAD_TEMP(TILE_X_NE),BIT_PLATFORM_TYPE, 4) % PLATFORM_FORMATION_COUNT + 1,BIT_NPLAT, 1) &\
       getbits(LOAD_TEMP(TEMP_NEARBY_TILE_GRF),     TILE_X_NE, 1)) << 0                 )

#define SP_GET_PLAT_FORMATION_S \
    ((!getbits(LOAD_TEMP(TEMP_NEARBY_TILE_STATION), TILE_X_SW, 1)                       |\
      !getbits(getbits(LOAD_TEMP(TILE_X_SW),BIT_PLATFORM_TYPE, 4) % PLATFORM_FORMATION_COUNT + 1,BIT_SPLAT, 1) &\
       getbits(LOAD_TEMP(TEMP_NEARBY_TILE_GRF),     TILE_X_SW, 1)) << 1                 |\
     (!getbits(LOAD_TEMP(TEMP_NEARBY_TILE_STATION), TILE_X_NE, 1)                       |\
      !getbits(getbits(LOAD_TEMP(TILE_X_NE),BIT_PLATFORM_TYPE, 4) % PLATFORM_FORMATION_COUNT + 1,BIT_SPLAT, 1) &\
       getbits(LOAD_TEMP(TEMP_NEARBY_TILE_GRF),     TILE_X_NE, 1)) << 0                 )

// get shelter formation
#define SP_GET_SHELTER_FORMATION_N \
    ((!getbits(LOAD_TEMP(TEMP_NEARBY_TILE_STATION), TILE_X_SW, 1)      |\
       getbits(LOAD_TEMP(TILE_X_SW),                BIT_NPLAT, 1)      &\
       getbits(LOAD_TEMP(TEMP_NEARBY_TILE_GRF),     TILE_X_SW, 1)) << 1|\
     (!getbits(LOAD_TEMP(TEMP_NEARBY_TILE_STATION), TILE_X_NE, 1)      |\
       getbits(LOAD_TEMP(TILE_X_NE),                BIT_NPLAT, 1)      &\
       getbits(LOAD_TEMP(TEMP_NEARBY_TILE_GRF),     TILE_X_NE, 1)) << 0)

#define SP_GET_SHELTER_FORMATION_S \
    ((!getbits(LOAD_TEMP(TEMP_NEARBY_TILE_STATION), TILE_X_SW, 1)      |\
       getbits(LOAD_TEMP(TILE_X_SW),                BIT_SPLAT, 1)      &\
       getbits(LOAD_TEMP(TEMP_NEARBY_TILE_GRF),     TILE_X_SW, 1)) << 1|\
     (!getbits(LOAD_TEMP(TEMP_NEARBY_TILE_STATION), TILE_X_NE, 1)      |\
       getbits(LOAD_TEMP(TILE_X_NE),                BIT_SPLAT, 1)      &\
       getbits(LOAD_TEMP(TEMP_NEARBY_TILE_GRF),     TILE_X_NE, 1)) << 0)

// platform recolouring
#define SP_PLATFORM_ERA_RECOLOUR \
    (GET_SPRITE(platform_type / PLATFORM_FORMATION_COUNT, GROUP_RECOLOUR_ERA, \
        (current_date < date(YEAR_ERA_2,1,1) ? 0 : \
         current_date < date(YEAR_ERA_3,1,1) ? 1 : 2)))


// start of spritelayouts
spritelayout sp_platform_x(platform_type, shelter_type) {
    ground {sprite: GROUNDSPRITE_RAIL_X;}
    #define SP_BUFFERSTOP(pos, bit) \
    building { /* bufferstop */ \
        sprite:         CUSTOM(S_MISC, GET_SPRITE_MISC(GROUP_BUFFERSTOP, pos));\
                        BBOX_BUFFERSTOP_##pos\
        hide_sprite:    SP_HIDE_SPRITE_BUFFERSTOP(bit);\
    }
    #define SP_PLATFORM(pos, pos2) \
    building { /* platform */ \
        sprite:         CUSTOM(S_PLATFORM, GET_SPRITE(platform_type / PLATFORM_FORMATION_COUNT, (GROUP_SYM + SP_GET_PLAT_FORMATION_##pos2), pos));\
                        BBOX_PLATFORM_##pos\
        hide_sprite:    !getbits(platform_type % PLATFORM_FORMATION_COUNT + 1, BIT_##pos2##PLAT, 1);\
        recolour_mode:  RECOLOUR_REMAP;\
        palette:        CUSTOM(S_PLATFORM, SP_PLATFORM_ERA_RECOLOUR);\
    }\
    childsprite { /* snow */ \
        sprite:         CUSTOM(S_MISC, GET_SPRITE_MISC(GROUP_SNOW_0 + SP_RANDOM_CHOOSE_SNOW, pos));\
        hide_sprite:    SP_HIDE_SPRITE_CHECK_SNOW;\
        recolour_mode:  RECOLOUR_REMAP;\
        palette:        CUSTOM(S_PLATFORM, GET_SPRITE(platform_type / PLATFORM_FORMATION_COUNT,GROUP_RECOLOUR_SNOW + SP_RANDOM_CHOOSE_SNOW * RNG(10,20) % 4, pos));\
    }\
    childsprite { /* shelter */ \
        sprite:         CUSTOM(S_SHELTER, GET_SPRITE_SHELTER(GROUP_SHELTER_SYM + SP_GET_SHELTER_FORMATION_##pos2, pos));\
        hide_sprite:    shelter_type;\
    }
    // the specific order of the sprites is important
    // because it affects the order of sprites in the purchase view
    SP_PLATFORM(NW, N)
    SP_BUFFERSTOP(NE, 0)
    SP_BUFFERSTOP(SW, 1)
    SP_PLATFORM(SE, S)
}

spritelayout sp_platform_y(platform_type, shelter_type) {
    ground {sprite: GROUNDSPRITE_RAIL_Y;}
    SP_PLATFORM(NE, N)
    SP_BUFFERSTOP(NW, 0)
    SP_BUFFERSTOP(SE, 1)
    SP_PLATFORM(SW, S)
}


// temp storage
switch (FEAT_STATIONS, SELF, sw_check_nearby_landscape,
        nearby_tile_slope(-1, 0) << TILE_X_NE|
        nearby_tile_slope( 1, 0) << TILE_X_SW|
        nearby_tile_slope( 0,-1) << TILE_X_NW|
        nearby_tile_slope( 0, 1) << TILE_X_SE|
        nearby_tile_slope(-1,-1) << TILE_X_N|
        nearby_tile_slope( 1, 1) << TILE_X_S|
        nearby_tile_slope( 1,-1) << TILE_X_W|
        nearby_tile_slope(-1, 1) << TILE_X_E) {return;}

switch (FEAT_STATIONS, SELF, sw_check_rail_continuation,
        hasbit(rail_continuation, 1) << TILE_X_NE|
        hasbit(rail_continuation, 0) << TILE_X_SW) {return;}

switch (FEAT_STATIONS, SELF, sw_check_nearby_tile_station,
        nearby_tile_is_station(-1, 0) << TILE_X_NE|
        nearby_tile_is_station( 1, 0) << TILE_X_SW|
        nearby_tile_is_station( 0,-1) << TILE_X_NW|
        nearby_tile_is_station( 0, 1) << TILE_X_SE|
        nearby_tile_is_station(-1,-1) << TILE_X_N|
        nearby_tile_is_station( 1, 1) << TILE_X_S|
        nearby_tile_is_station( 1,-1) << TILE_X_W|
        nearby_tile_is_station(-1, 1) << TILE_X_E) {return;}

switch (FEAT_STATIONS, SELF, sw_check_nearby_tile_perpendicular,
        nearby_tile_perpendicular(-1, 0) << TILE_X_NE|
        nearby_tile_perpendicular( 1, 0) << TILE_X_SW|
        nearby_tile_perpendicular( 0,-1) << TILE_X_NW|
        nearby_tile_perpendicular( 0, 1) << TILE_X_SE|
        nearby_tile_perpendicular(-1,-1) << TILE_X_N|
        nearby_tile_perpendicular( 1, 1) << TILE_X_S|
        nearby_tile_perpendicular( 1,-1) << TILE_X_W|
        nearby_tile_perpendicular(-1, 1) << TILE_X_E) {return;}

switch (FEAT_STATIONS, SELF, sw_check_nearby_tile_grf,
        nearby_tile_same_grf(-1, 0) << TILE_X_NE|
        nearby_tile_same_grf( 1, 0) << TILE_X_SW|
        nearby_tile_same_grf( 0,-1) << TILE_X_NW|
        nearby_tile_same_grf( 0, 1) << TILE_X_SE|
        nearby_tile_same_grf(-1,-1) << TILE_X_N|
        nearby_tile_same_grf( 1, 1) << TILE_X_S|
        nearby_tile_same_grf( 1,-1) << TILE_X_W|
        nearby_tile_same_grf(-1, 1) << TILE_X_E) {return;}

// we want to put all calculations and checks in spritelayouts, so here in
// the switch we only store the results of the checks in temporary variables

switch (FEAT_STATIONS, SELF, sw_platform, [
    STORE_TEMP(sw_check_rail_continuation(),            TEMP_RAIL_CONTINUATION),
    STORE_TEMP(nearby_tile_station_id(-1, 0),           TILE_X_NE),
    STORE_TEMP(nearby_tile_station_id( 1, 0),           TILE_X_SW),
    STORE_TEMP(nearby_tile_station_id( 0,-1),           TILE_X_NW),
    STORE_TEMP(nearby_tile_station_id( 0, 1),           TILE_X_SE),
    STORE_TEMP(nearby_tile_station_id(-1,-1),           TILE_X_N),
    STORE_TEMP(nearby_tile_station_id( 1, 1),           TILE_X_S),
    STORE_TEMP(nearby_tile_station_id( 1,-1),           TILE_X_W),
    STORE_TEMP(nearby_tile_station_id(-1, 1),           TILE_X_E),
    STORE_TEMP(nearby_tile_station_id( 0, 0),           TILE_SELF),
    STORE_TEMP(sw_check_nearby_tile_station(),          TEMP_NEARBY_TILE_STATION),
    STORE_TEMP(sw_check_nearby_tile_perpendicular(),    TEMP_NEARBY_TILE_PERPENDICULAR),
    STORE_TEMP(sw_check_nearby_tile_grf(),              TEMP_NEARBY_TILE_GRF),
    STORE_TEMP(nearby_tile_slope(0, 0),                 TEMP_CURRENT_LANDSCAPE),
//    STORE_TEMP(current_date,                            TEMP_CURRENT_DATE),
//    STORE_TEMP(terrain_type,                            TEMP_TERRAIN_TYPE),
//    STORE_TEMP(random_bits_tile,                        TEMP_RANDBIT_TILE),
//    STORE_TEMP(random_bits_station,                     TEMP_RANDBIT_STATION),
])
{return;}


#define STN_STATION_PROPERTY_0 \
property {\
    class:                  "WINS";\
    classname:              string(STR_GRF_NAME);\
    name:                   string(STR_GRF_NAME);\
    non_traversable_tiles:  0;\
    draw_pylon_tiles:       STAT_ALL_TILES;\
    hide_wire_tiles:        0;\
}

#define STN_CALC_ID(platform_type, shelter_type) \
    ((platform_type) << BIT_PLATFORM_TYPE | (shelter_type) << BIT_SHELTER_TYPE)

#define STN_CALC_PLATFORM_BIT(group, nplat, splat) \
    (group * PLATFORM_FORMATION_COUNT + (nplat << BIT_NPLAT) + (splat << BIT_SPLAT) - 1)

#define STN_STATION_WRAPPER(num, property, platform_type, shelter_type)\
item(FEAT_STATIONS, i_station_##num,\
    STN_CALC_ID(platform_type, shelter_type)) {\
    STN_STATION_PROPERTY_##property\
    graphics {\
        sprite_layouts: [sp_platform_x(platform_type, shelter_type), sp_platform_y(platform_type, shelter_type)];\
        custom_spritesets: [s_platform_cement, s_misc, s_shelter_tiles];\
        prepare_layout: sw_platform();\
    }\
}

STN_STATION_WRAPPER(0, 0, STN_CALC_PLATFORM_BIT(0,1,1), 1)
STN_STATION_WRAPPER(1, 0, STN_CALC_PLATFORM_BIT(0,1,0), 1)
STN_STATION_WRAPPER(2, 0, STN_CALC_PLATFORM_BIT(0,0,1), 1)
STN_STATION_WRAPPER(3, 0, STN_CALC_PLATFORM_BIT(1,1,1), 1)

