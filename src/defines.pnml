const PLATFORM_HEIGHT = 6;
const PLATFORM_WIDTH = 6;
const FULL_LENGTH = 16;
const BUFFERSTOP_WIDTH = 6;
const BUFFERSTOP_HEIGHT = 6;
const BUFFERSTOP_LENGTH = 4;
const FENCE_HEIGHT = 8;
const CATNAERY_HEIGHT = 12;
const CORNER_HOUSE_HEIGHT = 8;
const BRIDGE_WIDTH = 6;
const BRIDGE_HEIGHT = 4;
// we assume that all platforms have the same bbox length, in this case, it is 16.


#define BBOX_PLATFORM_NW \
    xoffset: 0;\
    yoffset: 0;\
    zoffset: 0;\
    xextent: FULL_LENGTH;\
    yextent: PLATFORM_WIDTH;\
    zextent: PLATFORM_HEIGHT;

#define BBOX_PLATFORM_SE \
    xoffset: 0;\
    yoffset: FULL_LENGTH - PLATFORM_WIDTH;\
    zoffset: 0;\
    xextent: FULL_LENGTH;\
    yextent: PLATFORM_WIDTH;\
    zextent: PLATFORM_HEIGHT;

#define BBOX_PLATFORM_NE \
    xoffset: 0;\
    yoffset: 0;\
    zoffset: 0;\
    xextent: PLATFORM_WIDTH;\
    yextent: FULL_LENGTH;\
    zextent: PLATFORM_HEIGHT;

#define BBOX_PLATFORM_SW \
    xoffset: FULL_LENGTH - PLATFORM_WIDTH;\
    yoffset: 0;\
    zoffset: 0;\
    xextent: PLATFORM_WIDTH;\
    yextent: FULL_LENGTH;\
    zextent: PLATFORM_HEIGHT;

#define BBOX_BUFFERSTOP_NW \
    xoffset: (FULL_LENGTH - BUFFERSTOP_LENGTH) / 2;\
    yoffset: 0;\
    zoffset: 0;\
    xextent: BUFFERSTOP_LENGTH;\
    yextent: BUFFERSTOP_WIDTH;\
    zextent: BUFFERSTOP_HEIGHT;

#define BBOX_BUFFERSTOP_SE \
    xoffset: (FULL_LENGTH - BUFFERSTOP_LENGTH) / 2;\
    yoffset: FULL_LENGTH - BUFFERSTOP_WIDTH;\
    zoffset: 0;\
    xextent: BUFFERSTOP_LENGTH;\
    yextent: BUFFERSTOP_WIDTH;\
    zextent: BUFFERSTOP_HEIGHT;

#define BBOX_BUFFERSTOP_NE \
    xoffset: 0;\
    yoffset: (FULL_LENGTH - BUFFERSTOP_LENGTH) / 2;\
    zoffset: 0;\
    xextent: BUFFERSTOP_WIDTH;\
    yextent: BUFFERSTOP_LENGTH;\
    zextent: BUFFERSTOP_HEIGHT;

#define BBOX_BUFFERSTOP_SW \
    xoffset: FULL_LENGTH - BUFFERSTOP_WIDTH;\
    yoffset: (FULL_LENGTH - BUFFERSTOP_LENGTH) / 2;\
    zoffset: 0;\
    xextent: BUFFERSTOP_WIDTH;\
    yextent: BUFFERSTOP_LENGTH;\
    zextent: BUFFERSTOP_HEIGHT;

#define BBOX_OVERHEAD_STRUCTURE(height)\
    xoffset: 0;\
    yoffset: 0;\
    zoffset: CATNAERY_HEIGHT;\
    xextent: FULL_LENGTH;\
    yextent: FULL_LENGTH;\
    zextent: height;

#define BBOX_OVERPASS_X \
    /* we want the bridge to be centred */ \
    xoffset: (FULL_LENGTH - BRIDGE_WIDTH) / 2;\
    yoffset: PLATFORM_WIDTH;\
    zoffset: CATNAERY_HEIGHT;\
    xextent: BRIDGE_WIDTH;\
    yextent: FULL_LENGTH - PLATFORM_WIDTH * 2;\
    zextent: BRIDGE_HEIGHT;

#define BBOX_OVERPASS_Y \
    xoffset: PLATFORM_WIDTH;\
    yoffset: (FULL_LENGTH - BRIDGE_WIDTH) / 2;\
    zoffset: CATNAERY_HEIGHT;\
    xextent: FULL_LENGTH - PLATFORM_WIDTH * 2;\
    yextent: BRIDGE_WIDTH;\
    zextent: BRIDGE_HEIGHT;

#define BBOX_PLATFORM_OVERPASS_NW \
    xoffset: 0;\
    yoffset: 0;\
    zoffset: 0;\
    xextent: FULL_LENGTH;\
    yextent: PLATFORM_WIDTH;\
    zextent: CATNAERY_HEIGHT + BRIDGE_HEIGHT;

#define BBOX_PLATFORM_OVERPASS_SE \
    xoffset: 0;\
    yoffset: FULL_LENGTH - PLATFORM_WIDTH;\
    zoffset: 0;\
    xextent: FULL_LENGTH;\
    yextent: PLATFORM_WIDTH;\
    zextent: CATNAERY_HEIGHT + BRIDGE_HEIGHT;

#define BBOX_PLATFORM_OVERPASS_NE \
    xoffset: 0;\
    yoffset: 0;\
    zoffset: 0;\
    xextent: PLATFORM_WIDTH;\
    yextent: FULL_LENGTH;\
    zextent: CATNAERY_HEIGHT + BRIDGE_HEIGHT;

#define BBOX_PLATFORM_OVERPASS_SW \
    xoffset: FULL_LENGTH - PLATFORM_WIDTH;\
    yoffset: 0;\
    zoffset: 0;\
    xextent: PLATFORM_WIDTH;\
    yextent: FULL_LENGTH;\
    zextent: CATNAERY_HEIGHT + BRIDGE_HEIGHT;


#define BBOX_CORNER_HOUSE_N \
    xoffset: 0;\
    yoffset: 0;\
    zoffset: 0;\
    xextent: PLATFORM_WIDTH;\
    yextent: PLATFORM_WIDTH;\
    zextent: CORNER_HOUSE_HEIGHT;

#define BBOX_CORNER_HOUSE_W \
    xoffset: 0;\
    yoffset: FULL_LENGTH - PLATFORM_WIDTH;\
    zoffset: 0;\
    xextent: PLATFORM_WIDTH;\
    yextent: PLATFORM_WIDTH;\
    zextent: CORNER_HOUSE_HEIGHT;

#define BBOX_CORNER_HOUSE_E \
    xoffset: FULL_LENGTH - PLATFORM_WIDTH;\
    yoffset: 0;\
    zoffset: 0;\
    xextent: PLATFORM_WIDTH;\
    yextent: PLATFORM_WIDTH;\
    zextent: CORNER_HOUSE_HEIGHT;

#define BBOX_CORNER_HOUSE_S \
    xoffset: FULL_LENGTH - PLATFORM_WIDTH;\
    yoffset: FULL_LENGTH - PLATFORM_WIDTH;\
    zoffset: 0;\
    xextent: PLATFORM_WIDTH;\
    yextent: PLATFORM_WIDTH;\
    zextent: CORNER_HOUSE_HEIGHT;

#define BBOX_BUFFER \
    xoffset: 0;\
    yoffset: 0;\
    zoffset: 0;\
    xextent: FULL_LENGTH;\
    yextent: FULL_LENGTH;\
    zextent: PLATFORM_HEIGHT;

#define BBOX_BUFFER_MIDDLE_X \
    xoffset: 0;\
    yoffset: PLATFORM_WIDTH;\
    zoffset: 0;\
    xextent: FULL_LENGTH;\
    yextent: FULL_LENGTH - PLATFORM_WIDTH * 2;\
    zextent: PLATFORM_HEIGHT;

#define BBOX_BUFFER_MIDDLE_Y \
    xoffset: PLATFORM_WIDTH;\
    yoffset: 0;\
    zoffset: 0;\
    xextent: FULL_LENGTH - PLATFORM_WIDTH * 2;\
    yextent: FULL_LENGTH;\
    zextent: PLATFORM_HEIGHT;

#define BBOX_FENCE_NW \
    xoffset: 0;\
    yoffset: 0;\
    zoffset: 0;\
    xextent: FULL_LENGTH;\
    yextent: 0;\
    zextent: FENCE_HEIGHT;

#define BBOX_FENCE_SE \
    xoffset: 0;\
    yoffset: FULL_LENGTH;\
    zoffset: 0;\
    xextent: FULL_LENGTH;\
    yextent: 0;\
    zextent: FENCE_HEIGHT;

#define BBOX_FENCE_NE \
    xoffset: 0;\
    yoffset: 0;\
    zoffset: 0;\
    xextent: 0;\
    yextent: FULL_LENGTH;\
    zextent: FENCE_HEIGHT;

#define BBOX_FENCE_SW \
    xoffset: FULL_LENGTH;\
    yoffset: 0;\
    zoffset: 0;\
    xextent: 0;\
    yextent: FULL_LENGTH;\
    zextent: FENCE_HEIGHT;

#define BBOX_FENCE_NE_N \
    xoffset: 0;\
    yoffset: 0;\
    zoffset: 0;\
    xextent: 0;\
    yextent: PLATFORM_WIDTH;\
    zextent: FENCE_HEIGHT;

#define BBOX_FENCE_NE_E \
    xoffset: 0;\
    yoffset: FULL_LENGTH - PLATFORM_WIDTH;\
    zoffset: 0;\
    xextent: 0;\
    yextent: PLATFORM_WIDTH;\
    zextent: FENCE_HEIGHT;

#define BBOX_FENCE_SW_S \
    xoffset: FULL_LENGTH;\
    yoffset: 0;\
    zoffset: 0;\
    xextent: 0;\
    yextent: PLATFORM_WIDTH;\
    zextent: FENCE_HEIGHT;

#define BBOX_FENCE_SW_W \
    xoffset: FULL_LENGTH;\
    yoffset: FULL_LENGTH - PLATFORM_WIDTH;\
    zoffset: 0;\
    xextent: 0;\
    yextent: PLATFORM_WIDTH;\
    zextent: FENCE_HEIGHT;

#define BBOX_FENCE_NW_N \
    xoffset: 0;\
    yoffset: 0;\
    zoffset: 0;\
    xextent: PLATFORM_WIDTH;\
    yextent: 0;\
    zextent: FENCE_HEIGHT;

#define BBOX_FENCE_NW_W \
    xoffset: FULL_LENGTH - PLATFORM_WIDTH;\
    yoffset: 0;\
    zoffset: 0;\
    xextent: PLATFORM_WIDTH;\
    yextent: 0;\
    zextent: FENCE_HEIGHT;

#define BBOX_FENCE_SE_S \
    xoffset: 0;\
    yoffset: FULL_LENGTH;\
    zoffset: 0;\
    xextent: PLATFORM_WIDTH;\
    yextent: 0;\
    zextent: FENCE_HEIGHT;

#define BBOX_FENCE_SE_E \
    xoffset: FULL_LENGTH - PLATFORM_WIDTH;\
    yoffset: FULL_LENGTH;\
    zoffset: 0;\
    xextent: PLATFORM_WIDTH;\
    yextent: 0;\
    zextent: FENCE_HEIGHT;

// era years, may switch to params later
const YEAR_ERA_1 = 0;
const YEAR_ERA_2 = 1952;
const YEAR_ERA_3 = 1986;
// platform formation count
const PLATFORM_FORMATION_COUNT = 3;
// 0000 0000 0000 0000

const BIT_NPLAT = 0;                         // 0 only
const BIT_SPLAT = 1;                         // 1 only
const BIT_PLATFORM_TYPE = 0;                 // 0 to 5, ranging from 0 to 63, each group has 3 platforms, which means 21 groups in total
const SIZE_BIT_PLATFORM_TYPE = 6;            // 6 bits for platform type, 2^6 = 64, 0 to 63
// 15 / 3 = 5, 15 % 3 = 0, thus there goes 0..4 a total of 5 types of platforms, and 15 stands for no platform
// unused
//#define BIT_PLATFORM_TYPE 4                 // 4 and 5, ranging from 0 to 3, providing 4 platforms
#define BIT_SHELTER_TYPE 4                  // 8 to 10, ranging from 0 to 7, providing 8 shelter types, 0 means no shelter

// funcitons
// compile time random number generator
#define RNG(min, max) ((min) + (__LINE__ * 1145141919 + 810) % ((max) - (min) + 1))
// real time random number generator with seed
#define RNG_SEED(seed, min, max) ((min) + ((seed) * 1145141919 + 810) % ((max) - (min) + 1))

// misc
#define TRUE (1)
#define FALSE (0)
