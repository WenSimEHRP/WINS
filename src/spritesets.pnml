// this file contains the spritesets used in the station grf
// including realsprites and recolour sprites
// defines
#define NW (0)
#define NE (1)
#define SE (2)
#define SW (3)
//* start of templates
#define X_SPRITE    (74)
#define X_SIZE      (72)
#define Y_SIZE      (72)

template t_0(pos, name)         {[X_SPRITE*pos,0,X_SIZE,Y_SIZE,0,0,"gfx/"+name+".png"]} // childsprite template
template t_overhead(pos, name)  {[X_SPRITE*pos,0,X_SIZE,Y_SIZE,-35,-27,"gfx/"+name+".png"]} // overhead template

template t_overpass_x(name)     {[X_SPRITE*0,0,X_SIZE,Y_SIZE,-45,-42,"gfx/"+name+".png"]}
template t_overpass_y(name)     {[X_SPRITE*1,0,X_SIZE,Y_SIZE,-25,-42,"gfx/"+name+".png"]}

template t_corner_N(name)       {[X_SPRITE*0,0,X_SIZE,Y_SIZE,-34,-36,"gfx/"+name+".png"]} // corner templates
template t_corner_E(name)       {[X_SPRITE*1,0,X_SIZE,Y_SIZE,-34,-36,"gfx/"+name+".png"]}
template t_corner_S(name)       {[X_SPRITE*2,0,X_SIZE,Y_SIZE,-34,-36,"gfx/"+name+".png"]}
template t_corner_W(name)       {[X_SPRITE*3,0,X_SIZE,Y_SIZE,-34,-36,"gfx/"+name+".png"]}

template t_bufferstop_NW(name)  {[X_SPRITE*0,0,X_SIZE,Y_SIZE,-23,-43,"gfx/"+name+".png"]} // bufferstop templates
template t_bufferstop_NE(name)  {[X_SPRITE*1,0,X_SIZE,Y_SIZE,-47,-43,"gfx/"+name+".png"]}
template t_bufferstop_SE(name)  {[X_SPRITE*2,0,X_SIZE,Y_SIZE,-43,-53,"gfx/"+name+".png"]}
template t_bufferstop_SW(name)  {[X_SPRITE*3,0,X_SIZE,Y_SIZE,-27,-53,"gfx/"+name+".png"]}

template t_platform_NW(name)    {[X_SPRITE*0,0,X_SIZE,Y_SIZE,-35,-37,"gfx/"+name+".png"]} // platform templates
template t_platform_NE(name)    {[X_SPRITE*1,0,X_SIZE,Y_SIZE,-35,-37,"gfx/"+name+".png"]}
template t_platform_SE(name)    {[X_SPRITE*2,0,X_SIZE,Y_SIZE,-55,-47,"gfx/"+name+".png"]}
template t_platform_SW(name)    {[X_SPRITE*3,0,X_SIZE,Y_SIZE,-15,-47,"gfx/"+name+".png"]}

template t_fence_NW(name)       {[X_SPRITE*0,0,X_SIZE,Y_SIZE,-35,-38,"gfx/"+name+".png"]} // fence templates
template t_fence_NE(name)       {[X_SPRITE*1,0,X_SIZE,Y_SIZE,-35,-38,"gfx/"+name+".png"]}
template t_fence_SE(name)       {[X_SPRITE*2,0,X_SIZE,Y_SIZE,-67,-53,"gfx/"+name+".png"]}
template t_fence_SW(name)       {[X_SPRITE*3,0,X_SIZE,Y_SIZE, -3,-53,"gfx/"+name+".png"]}

#undef X_SIZE
#undef Y_SIZE

//* start of miscellaneous spritesets
// here I have bufferstops, snow, random deco, and some other stuff
// for snow I'm going to use random recolouring and random sprites
// for simplicity, I'll put everything in one spriteset

// groups
//#define GROUP_SNOW_0        (0)
//#define GROUP_SNOW_1        (GROUP_SNOW_0 + 1)
//#define GROUP_SNOW_2        (GROUP_SNOW_1 + 1)
//#define GROUP_SNOW_3        (GROUP_SNOW_2 + 1)
//#define GROUP_BUFFERSTOP    (GROUP_SNOW_3 + 1)
#define GROUP_BUFFERSTOP    (0)
#define GROUP_DECO_0        (GROUP_BUFFERSTOP + 1)
#define GROUP_DECO_1        (GROUP_DECO_0 + 1)
#define GROUP_DECO_2        (GROUP_DECO_1 + 1)
#define GROUP_DECO_3        (GROUP_DECO_2 + 1)
#define GROUP_RECOLOUR_SNOW (GROUP_DECO_3 + 1)
#define GROUP_RECOLOUR_DECO (GROUP_RECOLOUR_SNOW + 1)
#define GROUP_FENCE         (GROUP_RECOLOUR_DECO + 1)
#define GROUP_SHADOW_SHORT  (GROUP_FENCE + 1)
#define GROUP_SHADOW_LONG   (GROUP_SHADOW_SHORT + 1)
// functions
#define SPRITE_PER_MISC_GRUOP (4)
#define GET_SPRITE_MISC(group, sprite) (group * SPRITE_PER_MISC_GRUOP + sprite)

spriteset(s_misc) {
    ///* snow */ //*0
    //snow_0_NW: t_0(0, "misc/snow_0")
    //snow_0_NE: t_0(1, "misc/snow_0")
    //snow_0_SE: t_0(2, "misc/snow_0")
    //snow_0_SW: t_0(3, "misc/snow_0")
    ///* snow */ //*1
    //snow_1_NW: t_0(0, "misc/snow_1")
    //snow_1_NE: t_0(1, "misc/snow_1")
    //snow_1_SE: t_0(2, "misc/snow_1")
    //snow_1_SW: t_0(3, "misc/snow_1")
    ///* snow */ //*2
    //snow_2_NW: t_0(0, "misc/snow_2")
    //snow_2_NE: t_0(1, "misc/snow_2")
    //snow_2_SE: t_0(2, "misc/snow_2")
    //snow_2_SW: t_0(3, "misc/snow_2")
    ///* snow */ //*3
    //snow_3_NW: t_0(0, "misc/snow_3")
    //snow_3_NE: t_0(1, "misc/snow_3")
    //snow_3_SE: t_0(2, "misc/snow_3")
    //snow_3_SW: t_0(3, "misc/snow_3")
    /* bufferstops */ //*4
    bufferstop_NW: t_bufferstop_NW("misc/bufferstop")
    bufferstop_NE: t_bufferstop_NE("misc/bufferstop")
    bufferstop_SE: t_bufferstop_SE("misc/bufferstop")
    bufferstop_SW: t_bufferstop_SW("misc/bufferstop")
    /* random deco */ //*5
    deco_0_NW: t_0(0, "misc/deco_0")
    deco_0_NE: t_0(1, "misc/deco_0")
    deco_0_SE: t_0(2, "misc/deco_0")
    deco_0_SW: t_0(3, "misc/deco_0")
    /* random deco */ //*6
    deco_1_NW: t_0(0, "misc/deco_1")
    deco_1_NE: t_0(1, "misc/deco_1")
    deco_1_SE: t_0(2, "misc/deco_1")
    deco_1_SW: t_0(3, "misc/deco_1")
    /* random deco */ //*7
    deco_2_NW: t_0(0, "misc/deco_2")
    deco_2_NE: t_0(1, "misc/deco_2")
    deco_2_SE: t_0(2, "misc/deco_2")
    deco_2_SW: t_0(3, "misc/deco_2")
    /* random deco */ //*8
    deco_3_NW: t_0(0, "misc/deco_3")
    deco_3_NE: t_0(1, "misc/deco_3")
    deco_3_SE: t_0(2, "misc/deco_3")
    deco_3_SW: t_0(3, "misc/deco_3")
    /* recolouring for snow */ //*9
    re_snow_1: recolour_sprite{}
    re_snow_2: recolour_sprite{
        15: RNG(11,15);
        210:RNG(152,161);
        212:RNG(210,214);
        135:RNG(128,135);
    }
    re_snow_3: recolour_sprite{
        15: RNG(11,15);
        210:RNG(152,161);
        212:RNG(210,214);
        135:RNG(128,135);
    }
    re_snow_4: recolour_sprite{
        15: RNG(11,15);
        210:RNG(152,161);
        212:RNG(210,214);
        135:RNG(128,135);
    }
    /* recolouring for deco */ //*10
    re_deco_1: recolour_sprite{0x00..0xFF:0x00..0xFF;}
    re_deco_2: recolour_sprite{0x00..0xFF:0x00..0xFF;}
    re_deco_3: recolour_sprite{0x00..0xFF:0x00..0xFF;}
    re_deco_4: recolour_sprite{0x00..0xFF:0x00..0xFF;}
    /* fences */ //*11
    fence_NW: t_fence_NW("misc/fence")
    fence_NE: t_fence_NE("misc/fence")
    fence_SE: t_fence_SE("misc/fence")
    fence_SW: t_fence_SW("misc/fence")
    /* short shadow */
    t_0         (0, "misc/shadow_short")
    t_0         (1, "misc/shadow_short")
    t_0         (2, "misc/shadow_short")
    t_0         (3, "misc/shadow_short")
    /* long shadow */
    t_0         (0, "misc/shadow_long")
    t_0         (1, "misc/shadow_long")
    t_0         (2, "misc/shadow_long")
    t_0         (3, "misc/shadow_long")
}

//* start of shelter spritesets
// gruops
#define GROUP_SHELTER_SYM               (0)
#define GROUP_SHELTER_ASYM_1            (GROUP_SHELTER_SYM + 1)
#define GROUP_SHELTER_ASYM_2            (GROUP_SHELTER_ASYM_1 + 1)
#define GROUP_SHELTER_SYM_EDGE          (GROUP_SHELTER_ASYM_2 + 1)
#define GROUP_SHELTER_SYM_SNOW          (GROUP_SHELTER_SYM_EDGE + 1)
#define GROUP_SHELTER_ASYM_1_SNOW       (GROUP_SHELTER_SYM_SNOW + 1)
#define GROUP_SHELTER_ASYM_2_SNOW       (GROUP_SHELTER_ASYM_1_SNOW + 1)
#define GROUP_SHELTER_SYM_EDGE_SNOW     (GROUP_SHELTER_ASYM_2_SNOW + 1)
#define GROUP_RECOLOUR_SHELTER_ERA      (GROUP_SHELTER_SYM_EDGE_SNOW + 1)
// functions
#define SPRITE_PER_SHELTER_GROUP 4
#define GET_SPRITE_SHELTER(group, sprite) (group * SPRITE_PER_SHELTER_GROUP + sprite)

spriteset(s_shelter_tiles) {
    /* sym shelters */
    #define S_SHELTER_SETUP(name) \
    NW_0:           t_0(0, "shelter/"+name+"_sym")\
    NE_0:           t_0(1, "shelter/"+name+"_sym")\
    SE_0:           t_0(2, "shelter/"+name+"_sym")\
    SW_0:           t_0(3, "shelter/"+name+"_sym")\
    /* asym shelters 1 */\
    NW_1:           t_0(0, "shelter/"+name+"_asym_1")\
    NE_1:           t_0(1, "shelter/"+name+"_asym_1")\
    SE_1:           t_0(2, "shelter/"+name+"_asym_1")\
    SW_1:           t_0(3, "shelter/"+name+"_asym_1")\
    /* asym shelters 2 */\
    NW_2:           t_0(0, "shelter/"+name+"_asym_2")\
    NE_2:           t_0(1, "shelter/"+name+"_asym_2")\
    SE_2:           t_0(2, "shelter/"+name+"_asym_2")\
    SW_2:           t_0(3, "shelter/"+name+"_asym_2")\
    /* sym edge shelters */\
    NW_3:           t_0(0, "shelter/"+name+"_sym_edge")\
    NE_3:           t_0(1, "shelter/"+name+"_sym_edge")\
    SE_3:           t_0(2, "shelter/"+name+"_sym_edge")\
    SW_3:           t_0(3, "shelter/"+name+"_sym_edge")
    /* shelter snow */
    #define S_SHELTER_SNOW_SETUP(name) \
    NW_0_snow:      t_0(4, "shelter/"+name+"_sym")\
    NE_0_snow:      t_0(5, "shelter/"+name+"_sym")\
    SE_0_snow:      t_0(6, "shelter/"+name+"_sym")\
    SW_0_snow:      t_0(7, "shelter/"+name+"_sym")\
    /* asym shelters 1 */\
    NW_1_snow:      t_0(4, "shelter/"+name+"_asym_1")\
    NE_1_snow:      t_0(5, "shelter/"+name+"_asym_1")\
    SE_1_snow:      t_0(6, "shelter/"+name+"_asym_1")\
    SW_1_snow:      t_0(7, "shelter/"+name+"_asym_1")\
    /* asym shelters 2 */\
    NW_2_snow:      t_0(4, "shelter/"+name+"_asym_2")\
    NE_2_snow:      t_0(5, "shelter/"+name+"_asym_2")\
    SE_2_snow:      t_0(6, "shelter/"+name+"_asym_2")\
    SW_2_snow:      t_0(7, "shelter/"+name+"_asym_2")\
    /* sym edge shelters */\
    NW_3_snow:      t_0(4, "shelter/"+name+"_sym_edge")\
    NE_3_snow:      t_0(5, "shelter/"+name+"_sym_edge")\
    SE_3_snow:      t_0(6, "shelter/"+name+"_sym_edge")\
    SW_3_snow:      t_0(7, "shelter/"+name+"_sym_edge")

    S_SHELTER_SETUP("shelter_tiles")
    S_SHELTER_SNOW_SETUP("shelter_tiles")
    /* recolouring, recolour from RNG? */
    re_era_1:       recolour_sprite{}
    re_era_2:       recolour_sprite{}
    re_era_3:       recolour_sprite{}
    re_era_4:       recolour_sprite{} // placeholder
}

//* start of platform spritesets

// groups
#define GROUP_SYM                       (0)
#define GROUP_ASYM_1                    (GROUP_SYM + 1)
#define GROUP_ASYM_2                    (GROUP_ASYM_1 + 1)
#define GROUP_SYM_EDGE                  (GROUP_ASYM_2 + 1)
#define GROUP_RECOLOUR_ERA              (GROUP_SYM_EDGE + 1)
#define GROUP_SNOW_SYM                  (GROUP_RECOLOUR_ERA + 1)
#define GROUP_SNOW_ASYM_1               (GROUP_SNOW_SYM + 1)
#define GROUP_SNOW_ASYM_2               (GROUP_SNOW_ASYM_1 + 1)
#define GROUP_SNOW_SYM_EDGE             (GROUP_SNOW_ASYM_2 + 1)

// split
#define GROUP_OVERHEAD_STRUCTURE        (GROUP_SNOW_SYM_EDGE + 1)
#define GROUP_OVERHEAD_STRUCTURE_SNOW   (GROUP_OVERHEAD_STRUCTURE + 1)

#define GROUP_PLATFORM_RECOLOUR_1       (GROUP_SNOW_SYM_EDGE + 1)
#define GROUP_PLATFORM_RECOLOUR_2       (GROUP_PLATFORM_RECOLOUR_1 + 1)

#define GROUP_CORNER_HOUSE              (GROUP_SNOW_SYM_EDGE + 1)
#define GROUP_CORNER_HOUSE_SNOW         (GROUP_CORNER_HOUSE + 1)
#define GROUP_CORNER_HOUSE_RECOLOUR     (GROUP_CORNER_HOUSE_SNOW + 1)

#define GROUP_OVERPASS                  (GROUP_SNOW_SYM_EDGE + 1) // bruh
#define GROUP_OVERPASS_SHADOW           (GROUP_OVERPASS + 1)

// functions
#define SPRITE_PER_PLATFORM_GROUP 4
#define GET_SPRITE(group, sprite)\
    (group * SPRITE_PER_PLATFORM_GROUP + sprite)
/*
There goes with two pointers: group pointer and sprite pointer
the group pointer points out the platform group, say, is it sym or
asym1 or asym2. The sprite pointer points out the sprite in the group,
say, is it NW or NE or SE or SW.

Here we use multiplication to tell the group and sprite apart.
Recoloursprites are special and should be handled separately.
*/

spriteset(s_platform_cement) {
        #define S_PLATFORM_SETUP(name) \
    t_platform_NW("platform/"+name+"_sym")\
    t_platform_NE("platform/"+name+"_sym")\
    t_platform_SE("platform/"+name+"_sym")\
    t_platform_SW("platform/"+name+"_sym")\
    /* asym platforms 1 */\
    t_platform_NW("platform/"+name+"_asym_1")\
    t_platform_NE("platform/"+name+"_asym_1")\
    t_platform_SE("platform/"+name+"_asym_1")\
    t_platform_SW("platform/"+name+"_asym_1")\
    /* asym platforms 2 */\
    t_platform_NW("platform/"+name+"_asym_2")\
    t_platform_NE("platform/"+name+"_asym_2")\
    t_platform_SE("platform/"+name+"_asym_2")\
    t_platform_SW("platform/"+name+"_asym_2")\
    /* sym edge platforms */\
    t_platform_NW("platform/"+name+"_sym_edge")\
    t_platform_NE("platform/"+name+"_sym_edge")\
    t_platform_SE("platform/"+name+"_sym_edge")\
    t_platform_SW("platform/"+name+"_sym_edge")

    S_PLATFORM_SETUP("platform_cement")
    /* recolouring, recolour from RNG? */
    recolour_sprite{
        0x41: 0x08;
        0x42: 0x08;
    }
    recolour_sprite{
        0x41: 0x0C;
        0x42: 0x0D;
    }
    recolour_sprite{}
    recolour_sprite{} // placeholder
    /* snow */
    #define S_PLATFORM_SNOW_SETUP(name) \
    t_0(0, "platform/"+name+"_snow_sym") \
    t_0(1, "platform/"+name+"_snow_sym") \
    t_0(2, "platform/"+name+"_snow_sym") \
    t_0(3, "platform/"+name+"_snow_sym") \
    /* snow */ \
    t_0(0, "platform/"+name+"_snow_asym_1") \
    t_0(1, "platform/"+name+"_snow_asym_1") \
    t_0(2, "platform/"+name+"_snow_asym_1") \
    t_0(3, "platform/"+name+"_snow_asym_1") \
    /* snow */ \
    t_0(0, "platform/"+name+"_snow_asym_2") \
    t_0(1, "platform/"+name+"_snow_asym_2") \
    t_0(2, "platform/"+name+"_snow_asym_2") \
    t_0(3, "platform/"+name+"_snow_asym_2") \
    /* snow */ \
    t_0(0, "platform/"+name+"_snow_sym_edge") \
    t_0(1, "platform/"+name+"_snow_sym_edge") \
    t_0(2, "platform/"+name+"_snow_sym_edge") \
    t_0(3, "platform/"+name+"_snow_sym_edge")

    S_PLATFORM_SNOW_SETUP("platform_cement")

    recolour_sprite{
        0x41: 17;
        0x42: 17;
        7:  16;
        8:  17;
        9:  18;
        10: 19;
    }
    recolour_sprite{
        0x41: 22;
        0x42: 23;
        7:  16;
        8:  17;
        9:  18;
        10: 19;
    }
    recolour_sprite{
        0x41: 0x41;
        0x42: 0x42;
        7:  16;
        8:  17;
        9:  18;
        10: 19;
    }
    recolour_sprite{} // placeholder
    /* group 2 */
    recolour_sprite{
        0x41: 58;
        0x42: 58;
        7:  56;
        8:  57;
        9:  58;
        10: 38;
    }
    recolour_sprite{
        0x41: 58;
        0x42: 0x0D;
        7:  56;
        8:  57;
        9:  58;
        10: 38;
    }
    recolour_sprite{
        0x41: 38;
        0x42: 39;
        7:  56;
        8:  57;
        9:  58;
        10: 38;
    }
    recolour_sprite{} // placeholder
}

spriteset(s_platform_cement_crossing) {
    #define S_CORNER_HOUSE_SETUP(name) \
    t_corner_N("platform/"+name+"_corner_house") \
    t_corner_E("platform/"+name+"_corner_house") \
    t_corner_S("platform/"+name+"_corner_house") \
    t_corner_W("platform/"+name+"_corner_house")
    #define S_CORNER_HOUSE_SNOW_SETUP(name) \
    t_corner_N("platform/"+name+"_corner_house_snow") \
    t_corner_E("platform/"+name+"_corner_house_snow") \
    t_corner_S("platform/"+name+"_corner_house_snow") \
    t_corner_W("platform/"+name+"_corner_house_snow")

    S_PLATFORM_SETUP("platform_cement_crossing")
    /* recolouring, recolour from RNG? */
    recolour_sprite{
        0x40: 0x07;
        0x41: 0x08;
        0x42: 0x08;
    }
    recolour_sprite{
        0x40: 0x0B;
        0x41: 0x0C;
        0x42: 0x0D;
    }
    recolour_sprite{}
    recolour_sprite{} // placeholder
    /* snow */
    S_PLATFORM_SNOW_SETUP       ("platform_cement_crossing")
    S_CORNER_HOUSE_SETUP        ("platform_cement_crossing")
    S_CORNER_HOUSE_SNOW_SETUP   ("platform_cement_crossing")
    // recolouring
    recolour_sprite{
        3:3;
        4:4;
        5:5;
        6:6;
        7:7;
        8:8;
        9:9;
        10:10;
        53:53;
        54:54;
        55:55;
        104:104;
        105:105;
        107:107;
        108:108;
        109:109;
    }
    recolour_sprite{
        3:154;
        4:155;
        5:156;
        6:157;
        7:158;
        8:159;
        9:160;
        10:161;
        53:5;
        54:6;
        55:7;
        104:16;
        105:17;
        107:18;
        108:19;
        109:20;
    }
    recolour_sprite{
        3:96;
        4:97;
        5:98;
        6:99;
        7:100;
        8:101;
        9:102;
        10:103;
        53:5;
        54:6;
        55:7;
        104:16;
        105:17;
        107:18;
        108:19;
        109:20;
    }
    recolour_sprite{}
}
/*
spriteset(s_platform_overpass) {
    S_PLATFORM_SETUP("platform_overpass")
    recolour_sprite{
        0x40: 0x07;
        0x41: 0x08;
        0x42: 0x08;
        98:104;
        99:2;
        100:3;
        101:3;
        102:7;
        103:5;
    }
    recolour_sprite{
        0x40: 0x0B;
        0x41: 0x0C;
        0x42: 0x0D;
        98:71;
        99:112;
        100:113;
        101:113;
        102:35;
        103:114;
    }
    recolour_sprite{}
    recolour_sprite{} // placeholder
    S_PLATFORM_SNOW_SETUP("platform_overpass")
}

spriteset(s_platform_overpass_test) {
    S_PLATFORM_SETUP("platform_overpass")
    recolour_sprite{
        0x40: 0x07;
        0x41: 0x08;
        0x42: 0x08;
        98:104;
        99:2;
        100:3;
        101:3;
        102:7;
        103:5;
    }
    recolour_sprite{
        0x40: 0x0B;
        0x41: 0x0C;
        0x42: 0x0D;
        98:71;
        99:112;
        100:113;
        101:113;
        102:35;
        103:114;
    }
    recolour_sprite{}
    recolour_sprite{} // placeholder

    S_PLATFORM_SNOW_SETUP("platform_overpass")
    #define S_PLATFORM_OVERHEAD_STRUCTURE_SETUP(name) \
    t_overhead(0, "platform/"+name+"_overhead") \
    t_overhead(1, "platform/"+name+"_overhead") \
    t_overhead(2, "platform/"+name+"_overhead") \
    t_overhead(3, "platform/"+name+"_overhead")

    #define S_PLATFORM_OVERHEAD_STRUCTURE_SNOW_SETUP(name) \
    t_overhead(4, "platform/"+name+"_overhead") \
    t_overhead(5, "platform/"+name+"_overhead") \
    t_overhead(6, "platform/"+name+"_overhead") \
    t_overhead(7, "platform/"+name+"_overhead") \

    S_PLATFORM_OVERHEAD_STRUCTURE_SETUP("platform_overpass")
    S_PLATFORM_OVERHEAD_STRUCTURE_SNOW_SETUP("platform_overpass")
}
*/
spriteset(s_platform_overpass_real) {
    S_PLATFORM_SETUP("platform_overpass_real")
    /* recolouring, recolour from RNG? */
    recolour_sprite{
        0x40: 0x07;
        0x41: 0x08;
        0x42: 0x08;
        98:104;
        99:2;
        100:3;
        101:3;
        102:7;
        103:5;
    }
    recolour_sprite{
        0x40: 0x0B;
        0x41: 0x0C;
        0x42: 0x0D;
        98:71;
        99:112;
        100:113;
        101:113;
        102:35;
        103:114;
    }
    recolour_sprite{}
    recolour_sprite{} // placeholder
    /* snow */
    S_PLATFORM_SNOW_SETUP("platform_overpass")
    #define S_OVERPASS_SETUP(name) \
    t_overpass_x(   "platform/"+name+"_overpass") \
    t_overpass_y(   "platform/"+name+"_overpass") \
    t_0         (2, "platform/"+name+"_overpass") \
    t_0         (3, "platform/"+name+"_overpass")
    S_OVERPASS_SETUP("platform_overpass_real")
}

spriteset (s_modular_low_overpass) {
    S_PLATFORM_SETUP("modular_low_overpass")
    recolour_sprite{}
    recolour_sprite{}
    recolour_sprite{}
    recolour_sprite{}
    S_PLATFORM_SNOW_SETUP("modular_low_overpass")
    #define S_PLATFORM_OVERHEAD_STRUCTURE_SETUP(name) \
    t_overhead(0, "platform/"+name+"_overhead") \
    t_overhead(1, "platform/"+name+"_overhead") \
    t_overhead(2, "platform/"+name+"_overhead") \
    t_overhead(3, "platform/"+name+"_overhead")

    #define S_PLATFORM_OVERHEAD_STRUCTURE_SNOW_SETUP(name) \
    t_0(0, "platform/"+name+"_snow_overhead") \
    t_0(1, "platform/"+name+"_snow_overhead") \
    t_0(2, "platform/"+name+"_snow_overhead") \
    t_0(3, "platform/"+name+"_snow_overhead") \

    S_PLATFORM_OVERHEAD_STRUCTURE_SETUP("modular_low_overpass")
    S_PLATFORM_OVERHEAD_STRUCTURE_SNOW_SETUP("modular_low_overpass")
}
