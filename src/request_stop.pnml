template tmpl_request_stop(x, y){
    [x * 64, y * 64, 64, 64, -37, -19]
}

spriteset (s_request_stop, "ase/request_stop.png"){
    tmpl_request_stop(0, 0)
    tmpl_request_stop(1, 0)
    tmpl_request_stop(2, 0)
    tmpl_request_stop(3, 0)
    tmpl_request_stop(4, 0)
    tmpl_request_stop(5, 0)
    tmpl_request_stop(6, 0)
    tmpl_request_stop(7, 0)
    tmpl_request_stop(0, 1)
    tmpl_request_stop(1, 1)
    tmpl_request_stop(2, 1)
    tmpl_request_stop(3, 1)
    tmpl_request_stop(4, 1)
    tmpl_request_stop(5, 1)
    tmpl_request_stop(6, 1)
    tmpl_request_stop(7, 1)
}

spritelayout sp_request_x {
	ground {
		sprite: GROUNDSPRITE_RAIL_X;
	}
	childsprite {
		sprite: CUSTOM(0, (((getbits(LOAD_TEMP(t_underlay), pos_underlay_type, pos_underlay_type_size) * id_underlay_size) + pos_underlay_start) + 0));
		hide_sprite: (!!((getbits(LOAD_TEMP(t_underlay), pos_underlay_type, pos_underlay_type_size) == none_code)) | !!(hasbit(LOAD_TEMP(t_underlay), pos_left)));
		always_draw: 1;
	}
	childsprite {
		sprite: CUSTOM(0, (((getbits(LOAD_TEMP(t_underlay), pos_underlay_type, pos_underlay_type_size) * id_underlay_size) + pos_underlay_start) + 2));
		hide_sprite: (!!((getbits(LOAD_TEMP(t_underlay), pos_underlay_type, pos_underlay_type_size) == none_code)) | !!(hasbit(LOAD_TEMP(t_underlay), pos_right)));
		always_draw: 1;
	}
	childsprite {
		sprite: CUSTOM(0, (((getbits(LOAD_TEMP(t_underlay), pos_underlay_type, pos_underlay_type_size) * id_underlay_size) + pos_underlay_start) + 1));
		hide_sprite: (!!((getbits(LOAD_TEMP(t_underlay), pos_underlay_type, pos_underlay_type_size) == none_code)) | !!(hasbit(LOAD_TEMP(t_underlay), pos_front)));
		always_draw: 1;
	}
	childsprite {
		sprite: CUSTOM(0, (((getbits(LOAD_TEMP(t_underlay), pos_underlay_type, pos_underlay_type_size) * id_underlay_size) + pos_underlay_start) + 3));
		hide_sprite: (!!((getbits(LOAD_TEMP(t_underlay), pos_underlay_type, pos_underlay_type_size) == none_code)) | !!(hasbit(LOAD_TEMP(t_underlay), pos_back)));
		always_draw: 1;
	}
	building {
		sprite: CUSTOM(0, (getbits(LOAD_TEMP(t_fence), pos_fence_type, pos_fence_type_size) * id_fence_size));
		xextent: 16;
		yextent: 0;
		zextent: 4;
		hide_sprite: (!!((getbits(LOAD_TEMP(t_fence), pos_fence_type, pos_fence_type_size) == none_code)) | !!(hasbit(LOAD_TEMP(t_fence), pos_left)));
	}
	building {
		sprite: CUSTOM(0, (getbits(LOAD_TEMP(t_fence), pos_fence_type, pos_fence_type_size) * id_fence_size));
		xextent: 16;
		yoffset: 16;
		yextent: 0;
		zextent: 4;
		hide_sprite: (!!((getbits(LOAD_TEMP(t_fence), pos_fence_type, pos_fence_type_size) == none_code)) | !!(hasbit(LOAD_TEMP(t_fence), pos_right)));
	}
	building {
		sprite: CUSTOM(0, ((getbits(LOAD_TEMP(t_fence), pos_fence_type, pos_fence_type_size) * id_fence_size) + 1));
		xextent: 0;
		yextent: 16;
		zextent: 4;
		hide_sprite: (!!((getbits(LOAD_TEMP(t_fence), pos_fence_type, pos_fence_type_size) == none_code)) | !!(hasbit(LOAD_TEMP(t_fence), pos_front)));
	}
	building {
		sprite: CUSTOM(0, ((getbits(LOAD_TEMP(t_fence), pos_fence_type, pos_fence_type_size) * id_fence_size) + 1));
		xextent: 0;
		xoffset: 16;
		yextent: 16;
		zextent: 4;
		hide_sprite: (!!((getbits(LOAD_TEMP(t_fence), pos_fence_type, pos_fence_type_size) == ((1 << 8) - 1))) | !!(hasbit(LOAD_TEMP(t_fence), pos_back)));
	}
	building {
		sprite: CUSTOM(0, (pos_barrier_start + 1));
		xextent: 6;
		yextent: 4;
		zextent: 6;
		yoffset: 6;
		hide_sprite: hasbit(LOAD_TEMP(t_barrier), pos_front);
	}
	building {
		sprite: CUSTOM(0, (pos_barrier_start + 3));
		xextent: 6;
		yextent: 4;
		xoffset: 10;
		zextent: 6;
		yoffset: 6;
		hide_sprite: hasbit(LOAD_TEMP(t_barrier), pos_back);
	}
    building {
        sprite: s_request_stop(3);
        xextent: 16;
        yoffset: 3;
        yextent: 2;
        zextent: 4;
    }
    building {
        sprite: s_request_stop(11);
        xextent: 16;
        yoffset: 11;
        yextent: 2;
        zextent: 4;
    }
}

spritelayout sp_request_y {
	ground {
		sprite: GROUNDSPRITE_RAIL_Y;
	}
	childsprite {
		sprite: CUSTOM(0, (((getbits(LOAD_TEMP(t_underlay), pos_underlay_type, pos_underlay_type_size) * id_underlay_size) + pos_underlay_start) + 1));
		hide_sprite: (!!((getbits(LOAD_TEMP(t_underlay), pos_underlay_type, pos_underlay_type_size) == none_code)) | !!(hasbit(LOAD_TEMP(t_underlay), pos_left)));
		always_draw: 1;
	}
	childsprite {
		sprite: CUSTOM(0, (((getbits(LOAD_TEMP(t_underlay), pos_underlay_type, pos_underlay_type_size) * id_underlay_size) + pos_underlay_start) + 3));
		hide_sprite: (!!((getbits(LOAD_TEMP(t_underlay), pos_underlay_type, pos_underlay_type_size) == none_code)) | !!(hasbit(LOAD_TEMP(t_underlay), pos_right)));
		always_draw: 1;
	}
	childsprite {
		sprite: CUSTOM(0, (((getbits(LOAD_TEMP(t_underlay), pos_underlay_type, pos_underlay_type_size) * id_underlay_size) + pos_underlay_start) + 0));
		hide_sprite: (!!((getbits(LOAD_TEMP(t_underlay), pos_underlay_type, pos_underlay_type_size) == none_code)) | !!(hasbit(LOAD_TEMP(t_underlay), pos_front)));
		always_draw: 1;
	}
	childsprite {
		sprite: CUSTOM(0, (((getbits(LOAD_TEMP(t_underlay), pos_underlay_type, pos_underlay_type_size) * id_underlay_size) + pos_underlay_start) + 2));
		hide_sprite: (!!((getbits(LOAD_TEMP(t_underlay), pos_underlay_type, pos_underlay_type_size) == none_code)) | !!(hasbit(LOAD_TEMP(t_underlay), pos_back)));
		always_draw: 1;
	}
	building {
		sprite: CUSTOM(0, ((getbits(LOAD_TEMP(t_fence), pos_fence_type, pos_fence_type_size) * id_fence_size) + 1));
		xextent: 0;
		yextent: 16;
		zextent: 4;
		hide_sprite: (!!((getbits(LOAD_TEMP(t_fence), pos_fence_type, pos_fence_type_size) == none_code)) | !!(hasbit(LOAD_TEMP(t_fence), pos_left)));
	}
	building {
		sprite: CUSTOM(0, ((getbits(LOAD_TEMP(t_fence), pos_fence_type, pos_fence_type_size) * id_fence_size) + 1));
		xextent: 0;
		xoffset: 16;
		yextent: 16;
		zextent: 4;
		hide_sprite: (!!((getbits(LOAD_TEMP(t_fence), pos_fence_type, pos_fence_type_size) == none_code)) | !!(hasbit(LOAD_TEMP(t_fence), pos_right)));
	}
	building {
		sprite: CUSTOM(0, (getbits(LOAD_TEMP(t_fence), pos_fence_type, pos_fence_type_size) * id_fence_size));
		xextent: 16;
		yextent: 0;
		zextent: 4;
		hide_sprite: (!!((getbits(LOAD_TEMP(t_fence), pos_fence_type, pos_fence_type_size) == none_code)) | !!(hasbit(LOAD_TEMP(t_fence), pos_front)));
	}
	building {
		sprite: CUSTOM(0, (getbits(LOAD_TEMP(t_fence), pos_fence_type, pos_fence_type_size) * id_fence_size));
		xextent: 16;
		yoffset: 16;
		yextent: 0;
		zextent: 4;
		hide_sprite: (!!((getbits(LOAD_TEMP(t_fence), pos_fence_type, pos_fence_type_size) == none_code)) | !!(hasbit(LOAD_TEMP(t_fence), pos_back)));
	}
	building {
		sprite: CUSTOM(0, (pos_barrier_start + 0));
		xextent: 4;
		yextent: 6;
		zextent: 6;
		xoffset: 6;
		hide_sprite: hasbit(LOAD_TEMP(t_barrier), pos_front);
	}
	building {
		sprite: CUSTOM(0, (pos_barrier_start + 2));
		xextent: 4;
		yextent: 6;
		yoffset: 10;
		zextent: 6;
		xoffset: 6;
		hide_sprite: hasbit(LOAD_TEMP(t_barrier), pos_back);
	}
}

switch(4, SELF, sw_item_request_prepare, [STORE_TEMP(sw_barrier(), t_barrier), STORE_TEMP(sw_fence(), t_fence), STORE_TEMP(sw_fence_underlay(), t_underlay)]) {
	return;
}

item(4, i_request, -1) {
	property {
		class: "WINS";
		classname: string(STR_CLASS_WINS);
		name: string(STR_STAT_EMPTY);
		tile_flags: [bitmask(STAT_TILE_PYLON), bitmask(STAT_TILE_PYLON), bitmask(STAT_TILE_PYLON), bitmask(STAT_TILE_PYLON), bitmask(STAT_TILE_PYLON), bitmask(STAT_TILE_PYLON), bitmask(STAT_TILE_PYLON), bitmask(STAT_TILE_PYLON)];
	}
	graphics {
        prepare_layout: sw_item_request_prepare();
        custom_spritesets: [s_fences_and_underlay];
        sprite_layouts: [sp_request_x, sp_request_y];
	}
}
